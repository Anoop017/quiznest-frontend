import { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { FaFilm } from 'react-icons/fa';
import { motion } from 'framer-motion';
import { FaArrowLeft } from 'react-icons/fa';

const quizData = [
  { emojis: 'ü¶Åüëë', answer: 'The Lion King' },
  { emojis: 'üßë‚ÄçüöÄüåï', answer: 'Interstellar' },
  { emojis: 'üï∑Ô∏èüßë', answer: 'Spider-Man' },
  { emojis: 'üßäüö¢üíî', answer: 'Titanic' },
  { emojis: 'üê†üîç', answer: 'Finding Nemo' },
  { emojis: 'ü¶ñüèûÔ∏è', answer: 'Jurassic Park' },
  { emojis: 'üßô‚Äç‚ôÇÔ∏èüßù‚Äç‚ôÇÔ∏èüó°Ô∏è', answer: 'The Lord of the Rings' },
  { emojis: 'üé§üë∏üèº', answer: 'Frozen' },
  { emojis: 'üêºü•ã', answer: 'Kung Fu Panda' },
  { emojis: 'üöóüèÅ', answer: 'Cars' },
  { emojis: 'ü¶áüèôÔ∏è', answer: 'The Dark Knight' },
  { emojis: 'üëì‚ö°üßô‚Äç‚ôÇÔ∏è', answer: 'Harry Potter' },
  { emojis: 'üöÄüë®‚ÄçüöÄüë®‚Äçü¶±', answer: 'Guardians of the Galaxy' },
  { emojis: 'üë®‚Äçüç≥üêÄ', answer: 'Ratatouille' },
  { emojis: 'üéàüè†üë¥üèª', answer: 'Up' },
  { emojis: 'üßõ‚Äç‚ôÇÔ∏èü©∏', answer: 'Dracula' },
  { emojis: 'üëΩüìûüè†', answer: 'E.T. the Extra-Terrestrial' },
  { emojis: 'üé≠üÉèü¶á', answer: 'Joker' },
  { emojis: '‚ò†Ô∏èüíÄüè¥‚Äç‚ò†Ô∏è', answer: 'Pirates of the Caribbean' },
  { emojis: 'üßü‚Äç‚ôÇÔ∏èüî´', answer: 'World War Z' },
  { emojis: 'üëªüî´', answer: 'Ghostbusters' },
  { emojis: 'üö¥üåïüëΩ', answer: 'E.T. the Extra-Terrestrial' },
  { emojis: 'üßä‚ùÑÔ∏èüë≠', answer: 'Frozen II' },
  { emojis: 'üë®‚ÄçüöÄü§ñüåå', answer: 'The Martian' },
  { emojis: 'üï∂Ô∏èüïµÔ∏è‚Äç‚ôÇÔ∏èüëΩ', answer: 'Men in Black' },
  { emojis: 'üë®‚Äçüè´üìöüß†', answer: 'A Beautiful Mind' },
  { emojis: 'üí™üá∫üá∏üõ°Ô∏è', answer: 'Captain America' },
  { emojis: 'ü¶çüèôÔ∏èüõ©Ô∏è', answer: 'King Kong' },
  { emojis: 'üêçüõ©Ô∏è', answer: 'Snakes on a Plane' },
  { emojis: 'üíÉüï∫üïØÔ∏è', answer: 'Beauty and the Beast' },
  { emojis: 'üßë‚Äçüé§üöÄ', answer: 'Rocketman' },
  { emojis: 'üêâüî•üë¶', answer: 'How to Train Your Dragon' },
  { emojis: 'üßë‚Äçüè´üéìüë©‚Äçüéì', answer: 'Dead Poets Society' },
  { emojis: 'üé§üë©‚Äçüé§üëë', answer: 'Bohemian Rhapsody' },
  { emojis: 'üèπüëßüî•', answer: 'The Hunger Games' },
  { emojis: 'üêòüëÇüé™', answer: 'Dumbo' },
  { emojis: 'üí§üåÄüß†', answer: 'Inception' },
  { emojis: 'üíÉüé∂üá®üá∫', answer: 'Coco' },
  { emojis: 'üéÆüë¶üëæ', answer: 'Ready Player One' },
  { emojis: 'üï∞Ô∏èüë®‚Äçüë¶üîÅ', answer: 'Back to the Future' },
  { emojis: 'üíºüè¶üî´', answer: 'The Bank Job' },
  { emojis: 'üë©‚Äçüî¨üë©‚Äç‚öïÔ∏èüöÄ', answer: 'Hidden Figures' },
  { emojis: 'ü§ñüöóüåå', answer: 'Transformers' },
  { emojis: 'üë¥üë∂üîÅ', answer: 'The Curious Case of Benjamin Button' },
  { emojis: 'üé•üíÉüé≠', answer: 'La La Land' },
  { emojis: 'üò°üëøüöó', answer: 'Mad Max: Fury Road' },
  { emojis: 'üßû‚Äç‚ôÇÔ∏èüïåüêí', answer: 'Aladdin' },
  { emojis: 'üê∑üê∂üßë‚Äçüåæ', answer: 'Charlotte‚Äôs Web' },
  { emojis: 'üßõ‚Äç‚ôÄÔ∏èüíîüê∫', answer: 'Twilight' },
  { emojis: 'üë©‚Äçüî¨üß¨üêÅ', answer: 'Flubber' },
  { emojis: 'üßô‚Äç‚ôÇÔ∏èüìúüêâ', answer: 'Eragon' },
  { emojis: 'üë©‚ÄçüëßüèûÔ∏èüêª', answer: 'Brave' },
  { emojis: 'üßäüêòü¶õ', answer: 'Ice Age' },
  { emojis: 'üé§üéßüßë‚Äçüé§', answer: 'Sing' },
  { emojis: 'üõ∏üåéüë®‚ÄçüöÄ', answer: 'Independence Day' },
  { emojis: 'ü¶çü¶ïü¶ñ', answer: 'Godzilla vs. Kong' },
  { emojis: 'üèàüßë‚Äçüéìüá∫üá∏', answer: 'Remember the Titans' },
  { emojis: 'üßë‚Äçüè´üìñüë®‚Äçüè´', answer: 'The Pursuit of Happyness' },
  { emojis: 'üßë‚Äçüíªüìüüîç', answer: 'The Matrix' },
  { emojis: 'üê∂üöÄüåå', answer: 'Astro Boy' },
  { emojis: 'üç´üè≠üë¶', answer: 'Charlie and the Chocolate Factory' },
  { emojis: 'üïäÔ∏èüë©üèΩ‚Äçü¶±üèõÔ∏è', answer: 'The Help' },
  { emojis: 'üïµÔ∏è‚Äç‚ôÇÔ∏èüîçüß©', answer: 'Sherlock Holmes' },
  { emojis: 'üìöüëßüèºüìñ', answer: 'Matilda' },
  { emojis: 'üßü‚Äç‚ôÄÔ∏èüèöÔ∏èüåÉ', answer: 'Resident Evil' },
  { emojis: 'üöôüë®‚Äçüë©‚Äçüëß‚Äçüë¶üå≤', answer: 'RV' },
  { emojis: 'üå™Ô∏èüè†üßô‚Äç‚ôÄÔ∏è', answer: 'The Wizard of Oz' },
  { emojis: 'üõèÔ∏èüëªüåÉ', answer: 'Paranormal Activity' },
  { emojis: 'ü§ñüíôüßë', answer: 'Big Hero 6' },
  { emojis: 'üëØ‚Äç‚ôÄÔ∏èüìπüè´', answer: 'Mean Girls' },
  { emojis: 'üêµüß†üåç', answer: 'Planet of the Apes' },
  { emojis: 'üçîüé•üá∫üá∏', answer: 'Super Size Me' },
  { emojis: 'üèûÔ∏èüêïü¶Ö', answer: 'The Call of the Wild' },
  { emojis: 'üîçüëÄüìΩÔ∏è', answer: 'Rear Window' },
  { emojis: 'üëßüììüíÄ', answer: 'Death Note' },
  { emojis: 'üë∂üî´üåÜ', answer: 'Baby Driver' },
  { emojis: 'üßô‚Äç‚ôÇÔ∏èüêâüí£', answer: 'The Hobbit' },
  { emojis: 'üèùÔ∏èüßî‚öΩ', answer: 'Cast Away' },
  { emojis: 'üìºüëªüî™', answer: 'The Ring' },
  { emojis: 'üî™üëßüè°', answer: 'Psycho' },
  { emojis: 'üêñüßíüåΩ', answer: 'Babe' },
  { emojis: 'üßõ‚Äç‚ôÇÔ∏èü¶áüßõ‚Äç‚ôÄÔ∏è', answer: 'Hotel Transylvania' },
  { emojis: 'üå™Ô∏èü¶àü¶à', answer: 'Sharknado' },
  { emojis: 'üè´üéìüìö', answer: 'School of Rock' },
  { emojis: 'üèñÔ∏èüêöüëÇ', answer: 'Moana' },
  { emojis: 'üíªüì±üåê', answer: 'The Social Network' },
  { emojis: 'üë®‚Äçüë¶üßíüçø', answer: 'The Incredibles' },
  { emojis: 'üîÆüåå‚è≥', answer: 'Doctor Strange' },
  { emojis: 'üè∞üêâ‚öîÔ∏è', answer: 'Shrek' },
  { emojis: 'üë©‚ÄçüöÄü™êüò±', answer: 'Gravity' },
  { emojis: 'üê±üë¢üó°Ô∏è', answer: 'Puss in Boots' },
  { emojis: 'üìºüî™üßë‚Äçü¶∞', answer: 'Scream' },
  { emojis: 'üë©‚Äçü¶∞üßπüê±', answer: 'Kiki‚Äôs Delivery Service' },
  { emojis: 'üë®‚ÄçüöÄü§ñüåç', answer: 'WALL-E' },
  { emojis: 'ü™ìüèïÔ∏èüò±', answer: 'Friday the 13th' },
  { emojis: 'üõ∂üé£üêä', answer: 'Crawl' },
  { emojis: 'ü¶äüé©üëî', answer: 'Fantastic Mr. Fox' },
  { emojis: 'üê∑üëëüè∞', answer: 'The Princess and the Frog' },
  { emojis: 'üë®‚Äçüé®üé≠üé®', answer: 'Loving Vincent' },
  { emojis: 'üöøüî™üßº', answer: 'American Psycho' },
  { emojis: 'üë©üèæ‚ÄçüöÄüõ∞Ô∏èüß†', answer: 'Gravity' },
  { emojis: 'üì∏üï∞Ô∏èüï≥Ô∏è', answer: 'Timecrimes' },
  { emojis: 'üßë‚Äçüé§üëØ‚Äç‚ôÇÔ∏èüíî', answer: 'Elvis' },
  { emojis: 'üßõ‚Äç‚ôÇÔ∏èüåÉü©∏', answer: 'Blade' },
  { emojis: 'üöìüèÉüî´', answer: 'The Fugitive' },
  { emojis: 'üìñ‚úâÔ∏èüß°', answer: 'The Notebook' },
  { emojis: 'üèéÔ∏èüî•üõ£Ô∏è', answer: 'Speed Racer' },
  { emojis: 'üé≤ü¶Åüêç', answer: 'Jumanji' },
  { emojis: 'üë¥üê¶üéì', answer: 'Gran Torino' },
  { emojis: 'üé≠üé™üéÜ', answer: 'The Greatest Showman' },
  { emojis: 'ü¶àüåäüö§', answer: 'Jaws' },
  { emojis: 'üìúüî•üïØÔ∏è', answer: 'National Treasure' },
  { emojis: 'üßë‚ÄçüöÄüî¥üëÅÔ∏è', answer: '2001: A Space Odyssey' },
  { emojis: 'üë®‚Äçüöíüî•üöí', answer: 'Only the Brave' },
  { emojis: 'üï∑Ô∏èüî´üï∏Ô∏è', answer: 'Spider-Man: No Way Home' },
  { emojis: 'üéÆüëßüßô‚Äç‚ôÄÔ∏è', answer: 'Wreck-It Ralph' },
  { emojis: 'üßöüåüüë¶', answer: 'Peter Pan' },
  { emojis: 'üë©‚Äçüëßüßö‚Äç‚ôÄÔ∏è', answer: 'Maleficent' },
  { emojis: 'üåäüë¶üêö', answer: 'The Little Mermaid' },
  { emojis: 'üëëüêé‚öîÔ∏è', answer: 'Braveheart' },
  { emojis: 'üêª‚õ∫üéí', answer: 'Paddington' },
  { emojis: 'üõ∏ü§ñüß†', answer: 'District 9' },
  { emojis: 'ü¶àüåä', answer: 'Shark Week' },
];


function EmojiMovieQuiz() {
  const [currentQuestion, setCurrentQuestion] = useState(null);
  const [score, setScore] = useState(0);
  const [questionCount, setQuestionCount] = useState(0);
  const [selectedAnswer, setSelectedAnswer] = useState(null);
  const [timer, setTimer] = useState(20);

  useEffect(() => {
    generateNewQuestion();
  }, []);

  useEffect(() => {
    if (!currentQuestion || selectedAnswer) return;
    if (timer === 0) {
      setSelectedAnswer('__timeout__');
      setTimeout(() => generateNewQuestion(), 1000);
      return;
    }

    const t = setTimeout(() => setTimer(prev => prev - 1), 1000);
    return () => clearTimeout(t);
  }, [timer, selectedAnswer, currentQuestion]);

  const generateNewQuestion = () => {
    const shuffled = [...quizData].sort(() => 0.5 - Math.random());
    const correct = shuffled[0];
    const options = [correct.answer];

    while (options.length < 4) {
      const random = quizData[Math.floor(Math.random() * quizData.length)].answer;
      if (!options.includes(random)) options.push(random);
    }

    const finalOptions = options.sort(() => 0.5 - Math.random());

    setCurrentQuestion({ ...correct, options: finalOptions });
    setSelectedAnswer(null);
    setQuestionCount(prev => prev + 1);
    setTimer(20);
  };

  const handleAnswer = (answer) => {
    if (selectedAnswer) return;

    setSelectedAnswer(answer);
    if (answer === currentQuestion.answer) {
      setScore(prev => prev + 1);
    }

    setTimeout(() => {
      generateNewQuestion();
    }, 1000);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-300 to-purple-600 flex flex-col items-center justify-center px-4 py-10">
      <div className="flex justify-between items-center w-full max-w-md mb-4">
        <Link
          to="/"
          className="flex items-center gap-2 text-sm text-purple-700 font-medium hover:underline hover:text-purple-900 transition-colors"
        >
          <FaArrowLeft />
          Home
        </Link>
        <p className="text-gray-700 font-semibold">‚è±Ô∏è {timer}s</p>
      </div>

      <h2 className="text-2xl font-bold text-purple-700 mb-4 flex items-center">
        <FaFilm className="mr-2" /> Emoji Movie Quiz
      </h2>
      <p className="text-gray-700 mb-6">Score: {score} / {questionCount - 1}</p>

      <motion.p
        className="text-4xl mb-6"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 0.5 }}
      >
        {currentQuestion?.emojis}
      </motion.p>

      <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 w-full max-w-md">
        {currentQuestion?.options.map((option, index) => {
          const isCorrect = option === currentQuestion.answer;
          const isSelected = selectedAnswer === option;

          let bg = 'bg-white';
          if (selectedAnswer) {
            if (isSelected && isCorrect) bg = 'bg-green-500 text-white';
            else if (isSelected && !isCorrect) bg = 'bg-red-400 text-white';
            else if (isCorrect) bg = 'bg-green-200';
          }

          return (
            <motion.button
              key={index}
              onClick={() => handleAnswer(option)}
              disabled={!!selectedAnswer}
              className={`${bg} py-3 px-4 rounded-xl shadow hover:scale-105 transition-transform text-sm`}
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ duration: 0.3, delay: index * 0.1 }}
            >
              {option}
            </motion.button>
          );
        })}
      </div>
    </div>
  );
}

export default EmojiMovieQuiz;
